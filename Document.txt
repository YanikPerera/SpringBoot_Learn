Spring Data/JPA

we can create a class which is include the datatable variable 
i have used UserDTO

@Entity
@Table (name = "user")
public class UserDTO {
	
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "user_id")
	private Integer id;
	@Column(name = "frist_name")
	private String firstName;
	@Column(name = "last_name")
	private String lastName;
	@Column(name = "age")
	private Integer age;
	@Column(name = "email")
	private String email;
	
	//getter and setter we are basically use for access the data,bcz in java we don't direct call the programmer values
	public Integer getId() {
		return id;
	}
	public void setId(Integer id) {
		this.id = id;
	}
	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	public Integer getAge() {
		return age;
	}
	public void setAge(Integer age) {
		this.age = age;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	
	

}

like this we can create any entity that we want

spring.datasource.url=jdbc:mysql://localhost:3306/springbootdemo

springbootdemo is which i have crated data base.
when run the application.properties file on ide the entity will create automatically in the database as datatable and related variables
if i run this again it will show us this alrady created and if mention in the top level this only for update then we can 
be able to update the database table values without doing any changes on the database side


for testing purspose whtout having interface 

we can use POSTMAN for call end point of the springboot application
using that we can do the data trasaction for while we testing.